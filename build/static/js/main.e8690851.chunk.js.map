{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/PersonsShow.js","services/persons.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonsShow","person","removePerson","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","console","log","delete","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","useEffect","personService","returnedData","arr","query","length","namesToShow","map","filter","el","toLowerCase","includes","event","target","nameObject","preventDefault","names","toLocaleLowerCase","numbers","window","alert","returnedName","concat","setTimeout","find","n","confirm","removedPerson","catch","error","promise","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8690851.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({newFilter, handleFilterChange}) => {\r\n\r\n    return(\r\n        <div>\r\n            <form>\r\n                <div> filter shown with: \r\n                    <input value={newFilter} \r\n                    onChange={handleFilterChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst PersonForm = ({addName, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div> name: \r\n                <input \r\n                value={newName}\r\n                onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div> number: \r\n                <input\r\n                value={newNumber}\r\n                onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst PersonsShow = ({person, removePerson}) => {\r\n    return (\r\n    <li>\r\n        {person.name}: {person.number} {\" \"}\r\n        <button onClick={removePerson}>\r\n            remove \r\n        </button>\r\n    </li>    \r\n    )\r\n}\r\n\r\n    \r\n         \r\nexport default PersonsShow","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  console.log(\"removed \",id);\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport axios from 'axios'\nimport PersonsShow from './components/PersonsShow'\nimport personService from './services/persons'\nimport persons from './services/persons'\n\n\nconst Notification = ({message}) => {\n  const notificationStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  }\n  if (message === null) {\n    return null\n  } else {\n    return (\n      <div style={notificationStyle}>\n        <br/>\n        <em>{message}</em>\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState('')\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(returnedData => {\n      setPersons(returnedData)\n    })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const filterNames = (arr, query) => {\n    return arr.filter(el => el.name.toLowerCase().includes(query))\n  }\n\n  if (newFilter.length > 0) {\n    var namesToShow = [...filterNames(persons.map(person => person),newFilter)]\n  } else {\n    var namesToShow = [...persons]\n  }\n\n\n  const addName = (event) => {\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    event.preventDefault()\n    const names = persons.map(person => person.name.toLocaleLowerCase())\n    const numbers = persons.map(person => person.number)\n    if (names.includes(newName.toLowerCase())) {\n      window.alert(`${newName} is already added to phonebook`)\n    } else if (numbers.includes(newNumber)) {\n      window.alert(`${newNumber} is already added to phonebook`)\n    } else {\n      personService\n        .create(nameObject)\n        .then(returnedName => {\n          setPersons(persons.concat(returnedName))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Added ${returnedName.name}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n      })\n    }\n  }\n\n  const removePerson = (id) => {\n    const person = persons.find(n => n.id === id)\n    if (window.confirm(`Remove ${person.name} `)) {    \n      personService\n      .remove(person.id)\n        .then(removedPerson => {\n          setMessage(`Removed ${person.name}`)\n          setTimeout(()=> {\n            setMessage(null)\n          }, 3000)\n          setPersons(persons.filter((person) => person.id !== id))\n        })  \n      .catch(error => {\n        setMessage(`the note '${person.name}': '${person.number}' was already deleted from server`)\n        setTimeout(()=> {\n          setMessage(null)\n        }, 3000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={message}/>\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h3>add a new number</h3>\n      <PersonForm \n        addName={addName} \n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n      <ul>\n        {namesToShow.map(person => \n            <PersonsShow\n            key={person.id}\n            person={person} \n              removePerson={() => removePerson(person.id)}\n            />\n        )}\n      </ul>\n    </div>\n   )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios'\n// import reportWebVitals from './reportWebVitals';\n\nconst promise = axios.get('https://stormy-hamlet-74653.herokuapp.com/')\nconsole.log(promise)\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}